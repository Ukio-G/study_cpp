Напишите метафункцию Zip (аналог std::transform), которая принимает два списка целых чисел одинаковой длины, а так же бинарную метафункцию,  и возвращает список, получившийся в результате поэлементного применения метафункции к соответствующим элементам исходных списков.

Пример:
// бинарная метафункция
template<int a, int b>
struct Plus
{
    static int const value = a + b;    
};

// два списка одной длины
using L1 = IntList<1,2,3,4,5>;
using L2 = IntList<1,3,7,7,2>;

// результат применения — список с поэлементными суммами
using L3 = Zip<L1, L2, Plus>::type;  // IntList<2, 5, 10, 11, 7>