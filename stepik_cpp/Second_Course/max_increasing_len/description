Для последовательности s_1,s_2,s_3,\dotsc,s_{n-1},s_{n}s 
1
​	
 ,s 
2
​	
 ,s 
3
​	
 ,…,s 
n−1
​	
 ,s 
n
​	
  будем называть подотрезком подпоследовательность вида s_i,s_{i+1},s_{i+2},\dotsc,s_{j-2},s_{j-1}s 
i
​	
 ,s 
i+1
​	
 ,s 
i+2
​	
 ,…,s 
j−2
​	
 ,s 
j−1
​	
  для некоторых ii и jj, i\le ji≤j, т.е. подотрезок — это непрерывная подпоследовательность.

Напишите функцию max_increasing_len, которая принимает последовательность, хранящуюся в std::list, по двум итераторам, и вычисляет для неё длину самого длинного строго возрастающего подотрезка.

Пример:

std::list<int> const l1 = {7,8,9,4,5,6,1,2,3,4};
size_t len1 = max_increasing_len(l1.begin(), l1.end()); // 4, соответствует подотрезку 1,2,3,4

std::list<int> const l2 = {-3,-2,-1,0,0,1,2,3,4,5};
size_t len2 = max_increasing_len(l2.begin(), l2.end()); // 6, соответствует подотрезку 0,1,2,3,4,5

Ограничения: не используйте другие контейнеры, не копируйте элементы из списка.